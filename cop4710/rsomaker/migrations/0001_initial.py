# Generated by Django 3.1.7 on 2021-03-31 12:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('comment_postdate', models.DateTimeField(auto_now_add=True, db_column='comment_postdate', primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, db_column='text')),
                ('rating', models.FloatField(db_column='rating', null=True)),
            ],
            options={
                'db_table': 'comment',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('eventid', models.AutoField(db_column='eventid', primary_key=True, serialize=False)),
                ('summary', models.TextField(db_column='summary')),
                ('privacy_level', models.IntegerField(db_column='privacy_level')),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('phone', models.TextField(blank=True, db_column='phone', null=True)),
                ('email', models.TextField(blank=True, db_column='email', null=True)),
                ('dtstart', models.DateTimeField(auto_now_add=True, db_column='dtstart')),
                ('dtend', models.DateTimeField(auto_now_add=True, db_column='dtend')),
                ('until', models.DateTimeField(auto_now_add=True, db_column='until')),
                ('rrule', models.TextField(db_column='rrule', null=True)),
            ],
            options={
                'db_table': 'event',
            },
        ),
        migrations.CreateModel(
            name='Event_tag',
            fields=[
                ('event_tagid', models.AutoField(db_column='event_tagid', primary_key=True, serialize=False)),
                ('event_tag_name', models.TextField(db_column='event_tag_name')),
            ],
            options={
                'db_table': 'event_tag',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('google_placeid', models.AutoField(db_column='google_placeid', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='name', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='latitude')),
                ('longitude', models.FloatField(blank=True, db_column='longitude')),
            ],
            options={
                'db_table': 'location',
            },
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('universityid', models.AutoField(db_column='universityid', primary_key=True, serialize=False)),
                ('student_count', models.IntegerField(db_column='student_count')),
                ('name', models.TextField(blank=True, db_column='name')),
                ('description', models.TextField(blank=True, db_column='description', null=True)),
                ('avatar_image', models.TextField(blank=True, db_column='avatar_image', null=True)),
                ('email_domain', models.TextField(db_column='email_domain')),
            ],
            options={
                'db_table': 'university',
            },
        ),
        migrations.CreateModel(
            name='University_location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.location')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.university')),
            ],
            options={
                'db_table': 'university_location',
            },
        ),
        migrations.CreateModel(
            name='Super_admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'super_admin',
            },
        ),
        migrations.CreateModel(
            name='Studies_at',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.university')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'studies_at',
            },
        ),
        migrations.CreateModel(
            name='RSO',
            fields=[
                ('rsoid', models.AutoField(db_column='rsoid', primary_key=True, serialize=False)),
                ('name', models.TextField(db_column='name')),
                ('description', models.TextField(db_column='description', null=True)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rso',
            },
        ),
        migrations.CreateModel(
            name='Registeredat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.rso')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.university')),
            ],
            options={
                'db_table': 'registered_at',
            },
        ),
        migrations.CreateModel(
            name='Rated',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(db_column='rating')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'rated',
            },
        ),
        migrations.CreateModel(
            name='Organizes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.event')),
                ('rso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.rso')),
            ],
            options={
                'db_table': 'organizes',
            },
        ),
        migrations.CreateModel(
            name='Member_of',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.rso')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'member_of',
            },
        ),
        migrations.CreateModel(
            name='Has_Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.event')),
                ('event_tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.event_tag')),
            ],
            options={
                'db_table': 'has_tag',
            },
        ),
        migrations.CreateModel(
            name='Event_location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.event')),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.location')),
            ],
            options={
                'db_table': 'event_location',
            },
        ),
        migrations.CreateModel(
            name='Commented_on',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.comment')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rsomaker.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'commented_on',
            },
        ),
    ]
